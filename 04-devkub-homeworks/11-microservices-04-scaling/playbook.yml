---
- name: Create instance
  hosts: localhost
  tasks:
    - name: Create netology114-vm1
      netology86.yandex_cloud_elk.yc_create_instance:
        network_interface: "net-ru-central1-a"
        name: "netology114-vm1"
        image_family: "centos-7"
        status: "running"

    - name: Create netology114-vm2
      netology86.yandex_cloud_elk.yc_create_instance:
        network_interface: "net-ru-central1-a"
        name: "netology114-vm2"
        image_family: "centos-7"
        status: "running"

    - name: Create netology114-vm3
      netology86.yandex_cloud_elk.yc_create_instance:
        network_interface: "net-ru-central1-a"
        name: "netology114-vm3"
        image_family: "centos-7"
        status: "running"

    - name: Refresh Inventory
      meta: refresh_inventory

- name: Add new host to inventory
  hosts: all
  gather_facts: false
  user: yc-user
  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 100

- name: Install Docker on nodes
  hosts: all
  become: yes
  gather_facts: no
  tasks:
    - name: Add docker repository
      command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: Installing EPEL
      yum: >
          name={{ item }}
          state=present
          update_cache=yes
      with_items:
          - epel-release

    - name: Installing Docker and pip packages
      yum: >
          name={{ item }}
          state=present
          update_cache=yes
      with_items:
          - wget
          - python-pip
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin

    - name: Download pip
      get_url:
        url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
        dest: /root/get-pip.py
        mode: '0755'
    - name: execute pip install script
      shell: 
        cmd: python get-pip.py
        chdir: /root
      changed_when: false

    # Не работает, слишком старый pip
    # - name: update pip
    #   pip: 
    #     name: pip
    #     extra_args: --upgrade
    
    - name: Install Docker python package
      pip:
        name: "{{ item }}"
        extra_args: --ignore-installed
      with_items:
        - docker==4.4.4
        - docker-compose

    - name: Enable docker daemon
      systemd:
          name: docker
          state: started
          enabled: yes


- name: Configure OS
  hosts: all
  become: yes
  gather_facts: no
  tasks:
    - name: stop firewall service if exists
      block:
      - name: stop firewall service
        service:
          name: firewalld
          state: stopped
          enabled: no
      rescue:
        - name: Print message
          ansible.builtin.debug:
            msg: 'firewalld was not found on the host'

    - name: Swappoff disable
      command: swapoff -a
      ignore_errors: yes

    - name: Disable SELinux
      selinux:
        state: disabled

- name: Run compose
  hosts: all
  become: yes
  gather_facts: no
  tasks:
    - name: Copy redis and compose configs
      copy:
        src: conf/
        dest: /root/conf/
        mode: 0644
        directory_mode: true
      notify:
        - Compose restart
        # - Compose remove
        # - Compose create

    - name: Copy compose file
      copy:
        src: conf/docker-compose.yml
        dest: /root/docker-compose.yml
        mode: 0644
      notify:
        - Compose restart
        # - Compose remove
        # - Compose create

  handlers:
    - name: Compose remove
      docker_compose:
        project_src: /root
        files:
        - docker-compose.yml
        state: absent
    - name: Compose create
      docker_compose:
        project_src: /root
        files:
        - docker-compose.yml
        state: present
    - name: Compose restart
      docker_compose:
        project_src: /root
        files:
        - docker-compose.yml
        state: present
        restarted: yes
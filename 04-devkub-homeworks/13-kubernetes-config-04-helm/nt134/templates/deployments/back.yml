---
{{- $resources := .Values.resources }}
{{- $volumes := .Values.misc.volumes.apps }}
{{- $namespace := .Values.global.namespace }}
{{- $replicas := .Values.apps.replicaCount }}
{{- $db_info := .Values.apps.db }}
{{- $persistence := .Values.global.persistence.enabled}}
apiVersion: apps/v1
kind: Deployment
{{- with .Values.apps.backend }}
metadata:
  labels:
    app: {{ .app }}
  name: {{ .app }}
  namespace: {{ $namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .app }}
  replicas: {{ $replicas }}
  template:
    metadata:
      labels:
        app: {{ .app }}
    spec:
      initContainers:
      - name: wait-for-db
        image: {{ $db_info.image }}:{{ $db_info.version }} 
        command: [ "sh", "-c", "until pg_isready -h db -p {{ (first $db_info.service.ports).port }} -U postgres:postgres; do echo 'not yet'; sleep 2; done" ]
      containers:
      - image: {{ .image }}:{{ .version }}
        imagePullPolicy: {{ .imagePullPolicy }}
        name: backend
        resources:
          {{- toYaml $resources | nindent 10 }}
        env:
          {{- range $index, $data := .env }}
          - name: {{ $data.name }}
            value: {{ $data.value }}
          {{- end}}
      {{- if $persistence }}
        volumeMounts:
          {{- range $index, $data := .mounts }}
          - name: {{ $data.name }}
            mountPath: {{ $data.mountPath }}
          {{- end}}
      volumes:
        {{- range $index, $data := $volumes }}
        - name: {{ $data.name }}
          persistentVolumeClaim:
            claimName: {{ $data.persistentVolumeClaim.claimName }}
        {{- end}}
      {{- end}}
{{ end }}